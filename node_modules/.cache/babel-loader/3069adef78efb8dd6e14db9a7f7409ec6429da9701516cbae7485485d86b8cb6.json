{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskTable from \"./TaskTable\"; // Adjust the path based on your file structure\nimport TaskDialog from \"./TaskDialog\"; // Ensure you have this component created\nimport { Toast, ToastContainer } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showDialog, setShowDialog] = useState(false);\n  const [tasks, setTasks] = useState([]); // Initialize task list as empty\n  const [currentTask, setCurrentTask] = useState(null); // For edit functionality\n  const [showToast, setShowToast] = useState(false);\n\n  // Function to open the dialog to add a new task\n  const handleShowAddDialog = () => {\n    setCurrentTask(null); // No current task when adding a new one\n    setShowDialog(true);\n  };\n\n  // Function to open the dialog to edit an existing task\n  const handleShowEditDialog = task => {\n    setCurrentTask(task); // Set the current task to be edited\n    setShowDialog(true);\n  };\n\n  // Function to close the dialog\n  const handleCloseDialog = () => {\n    setShowDialog(false);\n  };\n\n  // Function to save a new task or update an existing one\n  const handleSaveTask = task => {\n    if (currentTask) {\n      // Update an existing task\n      const updatedTasks = tasks.map(t => t.id === currentTask.id ? {\n        ...task,\n        id: currentTask.id\n      } : t);\n      setTasks(updatedTasks);\n    } else {\n      // Add a new task (with a simple ID generation for example purposes)\n      const newTask = {\n        ...task,\n        id: Date.now()\n      };\n      setTasks([...tasks, newTask]);\n      setShowToast(true); // Show success toast\n    }\n    setShowDialog(false); // Close the dialog after saving\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(TaskTable, {\n      tasks: tasks,\n      onEdit: handleShowEditDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskDialog, {\n      show: showDialog,\n      handleClose: handleCloseDialog,\n      handleSave: handleSaveTask,\n      taskData: currentTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-end\",\n      className: \"p-3\",\n      children: /*#__PURE__*/_jsxDEV(Toast, {\n        onClose: () => setShowToast(false),\n        show: showToast,\n        delay: 3000,\n        autohide: true,\n        children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            className: \"me-auto\",\n            children: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: \"Task added successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3EerX2NP3tfj1XT3Ft+RyggAsXU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskTable","TaskDialog","Toast","ToastContainer","jsxDEV","_jsxDEV","App","_s","showDialog","setShowDialog","tasks","setTasks","currentTask","setCurrentTask","showToast","setShowToast","handleShowAddDialog","handleShowEditDialog","task","handleCloseDialog","handleSaveTask","updatedTasks","map","t","id","newTask","Date","now","className","children","onEdit","fileName","_jsxFileName","lineNumber","columnNumber","show","handleClose","handleSave","taskData","position","onClose","delay","autohide","Header","Body","_c","$RefreshReg$"],"sources":["/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TaskTable from \"./TaskTable\"; // Adjust the path based on your file structure\nimport TaskDialog from \"./TaskDialog\"; // Ensure you have this component created\nimport { Toast, ToastContainer } from \"react-bootstrap\";\n\nfunction App() {\n  const [showDialog, setShowDialog] = useState(false);\n  const [tasks, setTasks] = useState([]); // Initialize task list as empty\n  const [currentTask, setCurrentTask] = useState(null); // For edit functionality\n  const [showToast, setShowToast] = useState(false);\n\n  // Function to open the dialog to add a new task\n  const handleShowAddDialog = () => {\n    setCurrentTask(null); // No current task when adding a new one\n    setShowDialog(true);\n  };\n\n  // Function to open the dialog to edit an existing task\n  const handleShowEditDialog = (task) => {\n    setCurrentTask(task); // Set the current task to be edited\n    setShowDialog(true);\n  };\n\n  // Function to close the dialog\n  const handleCloseDialog = () => {\n    setShowDialog(false);\n  };\n\n  // Function to save a new task or update an existing one\n  const handleSaveTask = (task) => {\n    if (currentTask) {\n      // Update an existing task\n      const updatedTasks = tasks.map((t) =>\n        t.id === currentTask.id ? { ...task, id: currentTask.id } : t\n      );\n      setTasks(updatedTasks);\n    } else {\n      // Add a new task (with a simple ID generation for example purposes)\n      const newTask = { ...task, id: Date.now() };\n      setTasks([...tasks, newTask]);\n      setShowToast(true); // Show success toast\n    }\n    setShowDialog(false); // Close the dialog after saving\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      {/* Button to add a new task */}\n      <TaskTable tasks={tasks} onEdit={handleShowEditDialog} />\n      <TaskDialog\n        show={showDialog}\n        handleClose={handleCloseDialog}\n        handleSave={handleSaveTask}\n        taskData={currentTask}\n      />\n      <ToastContainer position=\"top-end\" className=\"p-3\">\n        <Toast\n          onClose={() => setShowToast(false)}\n          show={showToast}\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">Success</strong>\n          </Toast.Header>\n          <Toast.Body>Task added successfully!</Toast.Body>\n        </Toast>\n      </ToastContainer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}