{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from \"react\";\nimport TaskTable from \"./TaskTable\";\nimport TaskDialog from \"./TaskDialog\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showDialog, setShowDialog] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const handleShowAddDialog = () => {\n    setCurrentTask(null);\n    setShowDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setShowDialog(false);\n  };\n  const handleCheckBox = (taskId, isComplete) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          isComplete\n        };\n      }\n      return task;\n    }));\n  };\n  const handleSaveTask = task => {\n    if (currentTask) {\n      // Update an existing task\n      const updatedTasks = tasks.map(t => t.id === currentTask.id ? {\n        ...t,\n        ...task\n      } : t);\n      setTasks(updatedTasks);\n    } else {\n      // Add a new task with unique ID\n      const newTask = {\n        ...task,\n        id: Date.now()\n      };\n      setTasks(prevTasks => [...prevTasks, newTask]);\n    }\n    setShowDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid px-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-primary py-3 px-3 d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white mb-0\",\n        children: \"Frameworks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleShowAddDialog,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n      tasks: tasks,\n      onEdit: task => {\n        setCurrentTask(task);\n        setShowDialog(true);\n      },\n      onCompleteChange: handleCheckBox // This is crucial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskDialog, {\n      show: showDialog,\n      handleClose: handleCloseDialog,\n      handleSave: handleSaveTask,\n      taskData: currentTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hP2kviUFr+yY+Fs1RSYhMP+lPq4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskTable","TaskDialog","Button","jsxDEV","_jsxDEV","App","_s","showDialog","setShowDialog","tasks","setTasks","currentTask","setCurrentTask","handleShowAddDialog","handleCloseDialog","handleCheckBox","taskId","isComplete","map","task","id","handleSaveTask","updatedTasks","t","newTask","Date","now","prevTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","onEdit","onCompleteChange","show","handleClose","handleSave","taskData","_c","$RefreshReg$"],"sources":["/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from \"react\";\nimport TaskTable from \"./TaskTable\";\nimport TaskDialog from \"./TaskDialog\";\nimport { Button } from \"react-bootstrap\";\n\nfunction App() {\n  const [showDialog, setShowDialog] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n\n  const handleShowAddDialog = () => {\n    setCurrentTask(null);\n    setShowDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setShowDialog(false);\n  };\n\n  const handleCheckBox = (taskId, isComplete) => {\n    setTasks((tasks) =>\n      tasks.map((task) => {\n        if (task.id === taskId) {\n          return { ...task, isComplete };\n        }\n        return task;\n      })\n    );\n  };\n\n  const handleSaveTask = (task) => {\n    if (currentTask) {\n      // Update an existing task\n      const updatedTasks = tasks.map((t) =>\n        t.id === currentTask.id ? { ...t, ...task } : t\n      );\n      setTasks(updatedTasks);\n    } else {\n      // Add a new task with unique ID\n      const newTask = { ...task, id: Date.now() };\n      setTasks((prevTasks) => [...prevTasks, newTask]);\n    }\n    setShowDialog(false);\n  };\n\n  return (\n    <div className=\"container-fluid px-0\">\n      <div className=\"bg-primary py-3 px-3 d-flex justify-content-between align-items-center\">\n        <h2 className=\"text-white mb-0\">Frameworks</h2>\n        <Button variant=\"primary\" onClick={handleShowAddDialog}>\n          Add\n        </Button>\n      </div>\n      <TaskTable\n        tasks={tasks}\n        onEdit={(task) => {\n          setCurrentTask(task);\n          setShowDialog(true);\n        }}\n        onCompleteChange={handleCheckBox} // This is crucial\n      />\n      <TaskDialog\n        show={showDialog}\n        handleClose={handleCloseDialog}\n        handleSave={handleSaveTask}\n        taskData={currentTask}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}