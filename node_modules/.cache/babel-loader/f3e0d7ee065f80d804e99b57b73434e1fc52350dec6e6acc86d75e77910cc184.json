{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/TaskDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDialog = ({\n  show,\n  handleClose,\n  handleSave,\n  taskData\n}) => {\n  _s();\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [deadline, setDeadline] = useState(new Date());\n  const [priority, setPriority] = useState(\"Medium\");\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    if (!taskData) {\n      // Reset form when opening the dialog to add a new task\n      setTaskTitle(\"\");\n      setDescription(\"\");\n      setDeadline(new Date());\n      setPriority(\"Medium\");\n      setErrors({});\n    } else {\n      // Populate form fields when editing an existing task\n      setTaskTitle(taskData.title);\n      setDescription(taskData.description);\n      setDeadline(new Date(taskData.deadline));\n      setPriority(taskData.priority);\n    }\n  }, [show, taskData]);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!taskTitle.trim()) newErrors.taskTitle = \"Title is required\";\n    if (!description.trim()) newErrors.description = \"Description is required\";\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = () => {\n    if (validateForm()) {\n      handleSave({\n        title: taskTitle,\n        description,\n        deadline,\n        priority\n      });\n      handleClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      style: {\n        backgroundColor: \"blue\",\n        color: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: taskData ? \"Edit Task\" : \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          controlId: \"taskTitle\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            sm: 3,\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 9,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: taskTitle,\n              onChange: e => setTaskTitle(e.target.value),\n              isInvalid: !!errors.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            sm: 3,\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 9,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              isInvalid: !!errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          controlId: \"deadline\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            sm: 3,\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 9,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: deadline,\n              onChange: date => setDeadline(date),\n              dateFormat: \"MM/dd/yyyy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSubmit,\n        children: taskData ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDialog, \"iieefcxAzIhC4aJxGwXAs1B003c=\");\n_c = TaskDialog;\nexport default TaskDialog;\nvar _c;\n$RefreshReg$(_c, \"TaskDialog\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","Row","Col","DatePicker","jsxDEV","_jsxDEV","TaskDialog","show","handleClose","handleSave","taskData","_s","taskTitle","setTaskTitle","description","setDescription","deadline","setDeadline","Date","priority","setPriority","errors","setErrors","title","validateForm","newErrors","trim","Object","keys","length","handleSubmit","onHide","children","Header","closeButton","style","backgroundColor","color","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","as","controlId","Label","column","sm","Control","type","value","onChange","e","target","isInvalid","Feedback","rows","selected","date","dateFormat","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/TaskDialog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst TaskDialog = ({ show, handleClose, handleSave, taskData }) => {\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [deadline, setDeadline] = useState(new Date());\n  const [priority, setPriority] = useState(\"Medium\");\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    if (!taskData) {\n      // Reset form when opening the dialog to add a new task\n      setTaskTitle(\"\");\n      setDescription(\"\");\n      setDeadline(new Date());\n      setPriority(\"Medium\");\n      setErrors({});\n    } else {\n      // Populate form fields when editing an existing task\n      setTaskTitle(taskData.title);\n      setDescription(taskData.description);\n      setDeadline(new Date(taskData.deadline));\n      setPriority(taskData.priority);\n    }\n  }, [show, taskData]);\n\n  const validateForm = () => {\n    const newErrors = {};\n    if (!taskTitle.trim()) newErrors.taskTitle = \"Title is required\";\n    if (!description.trim()) newErrors.description = \"Description is required\";\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = () => {\n    if (validateForm()) {\n      handleSave({\n        title: taskTitle,\n        description,\n        deadline,\n        priority,\n      });\n      handleClose();\n    }\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header\n        closeButton\n        style={{ backgroundColor: \"blue\", color: \"white\" }}\n      >\n        <Modal.Title>{taskData ? \"Edit Task\" : \"Add Task\"}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group as={Row} controlId=\"taskTitle\">\n            <Form.Label column sm={3}>\n              Title\n            </Form.Label>\n            <Col sm={9}>\n              <Form.Control\n                type=\"text\"\n                value={taskTitle}\n                onChange={(e) => setTaskTitle(e.target.value)}\n                isInvalid={!!errors.taskTitle}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.taskTitle}\n              </Form.Control.Feedback>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"description\">\n            <Form.Label column sm={3}>\n              Description\n            </Form.Label>\n            <Col sm={9}>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                isInvalid={!!errors.description}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.description}\n              </Form.Control.Feedback>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId=\"deadline\">\n            <Form.Label column sm={3}>\n              Deadline\n            </Form.Label>\n            <Col sm={9}>\n              <DatePicker\n                selected={deadline}\n                onChange={(date) => setDeadline(date)}\n                dateFormat=\"MM/dd/yyyy\"\n              />\n            </Col>\n          </Form.Group>\n          {/* Add priority selection if necessary */}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSubmit}>\n          {taskData ? \"Update\" : \"Add\"}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default TaskDialog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}