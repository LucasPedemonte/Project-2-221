{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/TaskTable.js\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(dateString) {\n  const [year, month, day] = dateString.split(\"-\"); // Split the date string\n  return `${parseInt(month)}/${parseInt(day)}/${year}`; // Format as MM/DD/YYYY\n}\nfunction TaskTable({\n  tasks,\n  onEdit,\n  onDelete,\n  onCompleteChange\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Is Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"align-middle\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: formatDate(task.deadline)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: task.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.isComplete,\n              onChange: () => onCompleteChange(task.id, !task.isComplete)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => onEdit(task),\n              style: {\n                width: \"50%\"\n              },\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => onDelete(task.id),\n              style: {\n                width: \"50%\"\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","Button","toast","jsxDEV","_jsxDEV","formatDate","dateString","year","month","day","split","parseInt","TaskTable","tasks","onEdit","onDelete","onCompleteChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","title","description","deadline","priority","type","checked","isComplete","onChange","id","variant","onClick","style","width","_c","$RefreshReg$"],"sources":["/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/TaskTable.js"],"sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction formatDate(dateString) {\n  const [year, month, day] = dateString.split(\"-\"); // Split the date string\n  return `${parseInt(month)}/${parseInt(day)}/${year}`; // Format as MM/DD/YYYY\n}\n\nfunction TaskTable({ tasks, onEdit, onDelete, onCompleteChange }) {\n  return (\n    <div className=\"container mt-5\">\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th className=\"text-center\">Title</th>\n            <th className=\"text-center\">Description</th>\n            <th className=\"text-center\">Deadline</th>\n            <th className=\"text-center\">Priority</th>\n            <th className=\"text-center\">Is Complete</th>\n            <th className=\"text-center\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task) => (\n            <tr key={task.id} className=\"align-middle\">\n              <td className=\"text-center\">{task.title}</td>\n              <td className=\"text-center\">{task.description}</td>\n              <td className=\"text-center\">{formatDate(task.deadline)}</td>\n              <td className=\"text-center\">{task.priority}</td>\n              <td className=\"text-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={task.isComplete}\n                  onChange={() => onCompleteChange(task.id, !task.isComplete)}\n                />\n              </td>\n              <td className=\"text-center\">\n                <Button\n                  variant=\"primary\"\n                  onClick={() => onEdit(task)}\n                  style={{ width: \"50%\" }}\n                >\n                  Update\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  onClick={() => onDelete(task.id)}\n                  style={{ width: \"50%\" }}\n                >\n                  Delete\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TaskTable;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,UAAUA,CAACC,UAAU,EAAE;EAC9B,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAEC,GAAG,CAAC,GAAGH,UAAU,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EAClD,OAAQ,GAAEC,QAAQ,CAACH,KAAK,CAAE,IAAGG,QAAQ,CAACF,GAAG,CAAE,IAAGF,IAAK,EAAC,CAAC,CAAC;AACxD;AAEA,SAASK,SAASA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAiB,CAAC,EAAE;EAChE,oBACEZ,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7Bd,OAAA;MAAOa,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACtBd,OAAA;QAAOa,SAAS,EAAC,YAAY;QAAAC,QAAA,eAC3Bd,OAAA;UAAAc,QAAA,gBACEd,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtClB,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5ClB,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzClB,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzClB,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5ClB,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRlB,OAAA;QAAAc,QAAA,EACGL,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdpB,OAAA;UAAkBa,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACxCd,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEM,IAAI,CAACC;UAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7ClB,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEM,IAAI,CAACE;UAAW;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnDlB,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEb,UAAU,CAACmB,IAAI,CAACG,QAAQ;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5DlB,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEM,IAAI,CAACI;UAAQ;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChDlB,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,eACzBd,OAAA;cACEyB,IAAI,EAAC,UAAU;cACfC,OAAO,EAAEN,IAAI,CAACO,UAAW;cACzBC,QAAQ,EAAEA,CAAA,KAAMhB,gBAAgB,CAACQ,IAAI,CAACS,EAAE,EAAE,CAACT,IAAI,CAACO,UAAU;YAAE;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7D;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLlB,OAAA;YAAIa,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACzBd,OAAA,CAACH,MAAM;cACLiC,OAAO,EAAC,SAAS;cACjBC,OAAO,EAAEA,CAAA,KAAMrB,MAAM,CAACU,IAAI,CAAE;cAC5BY,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAM,CAAE;cAAAnB,QAAA,EACzB;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTlB,OAAA,CAACH,MAAM;cACLiC,OAAO,EAAC,QAAQ;cAChBC,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAACS,IAAI,CAACS,EAAE,CAAE;cACjCG,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAM,CAAE;cAAAnB,QAAA,EACzB;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA,GA3BEE,IAAI,CAACS,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA4BZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACgB,EAAA,GAlDQ1B,SAAS;AAoDlB,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}