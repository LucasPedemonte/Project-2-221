{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/TaskTable.js\";\n// TaskTable.js\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const formattedDate = `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n  return formattedDate;\n}\nfunction TaskTable({\n  tasks,\n  onEdit,\n  onDelete\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(task.deadline)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.isComplete,\n              onChange: () => {\n                // Handle change\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: !task.isComplete && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                style: {\n                  width: \"100%\"\n                },\n                onClick: () => onEdit(task),\n                className: \"me-2 mb-2\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => onDelete(task.id),\n                style: {\n                  width: \"100%\"\n                },\n                className: \"mb-2\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","formatDate","dateString","date","Date","formattedDate","getMonth","getDate","getFullYear","TaskTable","tasks","onEdit","onDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","title","description","deadline","priority","type","checked","isComplete","onChange","variant","style","width","onClick","id","_c","$RefreshReg$"],"sources":["/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/TaskTable.js"],"sourcesContent":["// TaskTable.js\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const formattedDate = `${\n    date.getMonth() + 1\n  }/${date.getDate()}/${date.getFullYear()}`;\n  return formattedDate;\n}\n\nfunction TaskTable({ tasks, onEdit, onDelete }) {\n  return (\n    <div className=\"container mt-5\">\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Deadline</th>\n            <th>Priority</th>\n            <th>Is Complete</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task) => (\n            <tr key={task.id}>\n              <td>{task.title}</td>\n              <td>{task.description}</td>\n              <td>{formatDate(task.deadline)}</td>{\" \"}\n              {/* Display formatted deadline */}\n              <td>{task.priority}</td>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={task.isComplete}\n                  onChange={() => {\n                    // Handle change\n                  }}\n                />\n              </td>\n              <td>\n                {/* Conditionally render the \"Update\" button */}\n                {!task.isComplete && (\n                  <>\n                    <Button\n                      variant=\"primary\"\n                      style={{ width: \"100%\" }}\n                      onClick={() => onEdit(task)}\n                      className=\"me-2 mb-2\"\n                    >\n                      Update\n                    </Button>\n                    <Button\n                      variant=\"danger\"\n                      onClick={() => onDelete(task.id)}\n                      style={{ width: \"100%\" }}\n                      className=\"mb-2\"\n                    >\n                      Delete\n                    </Button>\n                  </>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TaskTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}