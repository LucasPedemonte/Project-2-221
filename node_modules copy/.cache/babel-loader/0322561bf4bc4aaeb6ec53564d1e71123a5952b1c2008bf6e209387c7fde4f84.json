{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/TaskTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskTable({\n  tasks,\n  onEdit\n}) {\n  _s();\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const handleCheckboxChange = task => {\n    if (task.isComplete) {\n      setCompletedTasks(completedTasks.filter(id => id !== task.id));\n    } else {\n      setCompletedTasks([...completedTasks, task.id]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.deadline ? new Date(task.deadline).toLocaleDateString() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.isComplete,\n              onChange: () => handleCheckboxChange(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: !completedTasks.includes(task.id) && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              style: {\n                backgroundColor: \"blue\",\n                color: \"white\"\n              },\n              onClick: () => onEdit(task),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTable, \"vzvJjits3kLZbogJVSf28qkvix8=\");\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","TaskTable","tasks","onEdit","_s","completedTasks","setCompletedTasks","handleCheckboxChange","task","isComplete","filter","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","description","deadline","Date","toLocaleDateString","priority","type","checked","onChange","includes","variant","style","backgroundColor","color","onClick","_c","$RefreshReg$"],"sources":["/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/TaskTable.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nfunction TaskTable({ tasks, onEdit }) {\n  const [completedTasks, setCompletedTasks] = useState([]);\n\n  const handleCheckboxChange = (task) => {\n    if (task.isComplete) {\n      setCompletedTasks(completedTasks.filter((id) => id !== task.id));\n    } else {\n      setCompletedTasks([...completedTasks, task.id]);\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Deadline</th>\n            <th>Priority</th>\n            <th>Is Complete</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map((task) => (\n            <tr key={task.id}>\n              <td>{task.title}</td>\n              <td>{task.description}</td>\n              <td>\n                {task.deadline\n                  ? new Date(task.deadline).toLocaleDateString()\n                  : \"\"}\n              </td>\n              <td>{task.priority}</td>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={task.isComplete}\n                  onChange={() => handleCheckboxChange(task)}\n                />\n              </td>\n              <td>\n                {/* Conditionally render the \"Update\" button */}\n                {!completedTasks.includes(task.id) && (\n                  <Button\n                    variant=\"primary\"\n                    style={{ backgroundColor: \"blue\", color: \"white\" }}\n                    onClick={() => onEdit(task)}\n                  >\n                    Update\n                  </Button>\n                )}\n                {/* Add Delete button if necessary */}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TaskTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}