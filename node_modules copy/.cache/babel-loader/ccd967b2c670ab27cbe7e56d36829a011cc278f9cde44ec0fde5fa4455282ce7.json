{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/TaskDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDialog = ({\n  show,\n  handleClose,\n  handleSave,\n  taskData\n}) => {\n  _s();\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [deadline, setDeadline] = useState(new Date());\n  const [priority, setPriority] = useState(\"Medium\"); // Set default to 'Medium'\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    // Reset form when opening the dialog to add a new task\n    if (!taskData) {\n      setTaskTitle(\"\");\n      setDescription(\"\");\n      setDeadline(new Date());\n      setPriority(\"Medium\");\n      setErrors({});\n    }\n  }, [show, taskData]);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!taskTitle.trim()) newErrors.taskTitle = \"Title is required\";\n    if (!description.trim()) newErrors.description = \"Description is required\";\n    if (!deadline) newErrors.deadline = \"Deadline is required\";\n    if (!priority) newErrors.priority = \"Priority is required\";\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = () => {\n    if (validateForm()) {\n      handleSave({\n        title: taskTitle,\n        description,\n        deadline,\n        priority\n      });\n      handleClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: taskData ? \"Edit Task\" : \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          controlId: \"taskTitle\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            sm: 3,\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 9,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: taskTitle,\n              onChange: e => setTaskTitle(e.target.value),\n              isInvalid: !!errors.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSubmit,\n        children: taskData ? \"Update\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDialog, \"iieefcxAzIhC4aJxGwXAs1B003c=\");\n_c = TaskDialog;\nexport default TaskDialog;\nvar _c;\n$RefreshReg$(_c, \"TaskDialog\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","Row","Col","DatePicker","jsxDEV","_jsxDEV","TaskDialog","show","handleClose","handleSave","taskData","_s","taskTitle","setTaskTitle","description","setDescription","deadline","setDeadline","Date","priority","setPriority","errors","setErrors","validateForm","newErrors","trim","Object","keys","length","handleSubmit","title","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","as","controlId","Label","column","sm","Control","type","value","onChange","e","target","isInvalid","Feedback","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/TaskDialog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst TaskDialog = ({ show, handleClose, handleSave, taskData }) => {\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [deadline, setDeadline] = useState(new Date());\n  const [priority, setPriority] = useState(\"Medium\"); // Set default to 'Medium'\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    // Reset form when opening the dialog to add a new task\n    if (!taskData) {\n      setTaskTitle(\"\");\n      setDescription(\"\");\n      setDeadline(new Date());\n      setPriority(\"Medium\");\n      setErrors({});\n    }\n  }, [show, taskData]);\n\n  const validateForm = () => {\n    const newErrors = {};\n    if (!taskTitle.trim()) newErrors.taskTitle = \"Title is required\";\n    if (!description.trim()) newErrors.description = \"Description is required\";\n    if (!deadline) newErrors.deadline = \"Deadline is required\";\n    if (!priority) newErrors.priority = \"Priority is required\";\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = () => {\n    if (validateForm()) {\n      handleSave({\n        title: taskTitle,\n        description,\n        deadline,\n        priority,\n      });\n      handleClose();\n    }\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{taskData ? \"Edit Task\" : \"Add Task\"}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group as={Row} controlId=\"taskTitle\">\n            <Form.Label column sm={3}>\n              Title\n            </Form.Label>\n            <Col sm={9}>\n              <Form.Control\n                type=\"text\"\n                value={taskTitle}\n                onChange={(e) => setTaskTitle(e.target.value)}\n                isInvalid={!!errors.taskTitle}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.taskTitle}\n              </Form.Control.Feedback>\n            </Col>\n          </Form.Group>\n          {/* ... rest of the form fields ... */}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSubmit}>\n          {taskData ? \"Update\" : \"Add\"}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default TaskDialog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}