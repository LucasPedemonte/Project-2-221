{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskTable from \"./TaskTable\"; // Adjust the path based on your file structure\nimport TaskDialog from \"./TaskDialog\"; // Ensure you have this component created\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showDialog, setShowDialog] = useState(false);\n  const [tasks, setTasks] = useState([]); // Initialize task list as empty\n  const [currentTask, setCurrentTask] = useState(null); // For edit functionality\n\n  // Function to open the dialog to add a new task\n  const handleShowAddDialog = () => {\n    setCurrentTask(null); // No current task when adding a new one\n    setShowDialog(true);\n  };\n\n  // Function to open the dialog to edit an existing task\n  const handleShowEditDialog = task => {\n    setCurrentTask(task); // Set the current task to be edited\n    setShowDialog(true);\n  };\n\n  // Function to close the dialog\n  const handleCloseDialog = () => {\n    setShowDialog(false);\n  };\n\n  // Function to save a new task or update an existing one\n  const handleSaveTask = task => {\n    if (currentTask) {\n      // Update an existing task\n      const updatedTasks = tasks.map(t => t.id === currentTask.id ? {\n        ...task,\n        id: currentTask.id\n      } : t);\n      setTasks(updatedTasks);\n    } else {\n      // Add a new task (with a simple ID generation for example purposes)\n      const newTask = {\n        ...task,\n        id: Date.now()\n      };\n      setTasks([...tasks, newTask]);\n    }\n    setShowDialog(false); // Close the dialog after saving\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(TaskTable, {\n      tasks: tasks,\n      onEdit: handleShowEditDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskDialog, {\n      show: showDialog,\n      handleClose: handleCloseDialog,\n      handleSave: handleSaveTask,\n      taskData: currentTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hP2kviUFr+yY+Fs1RSYhMP+lPq4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskTable","TaskDialog","jsxDEV","_jsxDEV","App","_s","showDialog","setShowDialog","tasks","setTasks","currentTask","setCurrentTask","handleShowAddDialog","handleShowEditDialog","task","handleCloseDialog","handleSaveTask","updatedTasks","map","t","id","newTask","Date","now","className","children","onEdit","fileName","_jsxFileName","lineNumber","columnNumber","show","handleClose","handleSave","taskData","_c","$RefreshReg$"],"sources":["/Users/lucaspedemonte/Documents/GitHub/Project 2/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TaskTable from \"./TaskTable\"; // Adjust the path based on your file structure\nimport TaskDialog from \"./TaskDialog\"; // Ensure you have this component created\n\nfunction App() {\n  const [showDialog, setShowDialog] = useState(false);\n  const [tasks, setTasks] = useState([]); // Initialize task list as empty\n  const [currentTask, setCurrentTask] = useState(null); // For edit functionality\n\n  // Function to open the dialog to add a new task\n  const handleShowAddDialog = () => {\n    setCurrentTask(null); // No current task when adding a new one\n    setShowDialog(true);\n  };\n\n  // Function to open the dialog to edit an existing task\n  const handleShowEditDialog = (task) => {\n    setCurrentTask(task); // Set the current task to be edited\n    setShowDialog(true);\n  };\n\n  // Function to close the dialog\n  const handleCloseDialog = () => {\n    setShowDialog(false);\n  };\n\n  // Function to save a new task or update an existing one\n  const handleSaveTask = (task) => {\n    if (currentTask) {\n      // Update an existing task\n      const updatedTasks = tasks.map((t) =>\n        t.id === currentTask.id ? { ...task, id: currentTask.id } : t\n      );\n      setTasks(updatedTasks);\n    } else {\n      // Add a new task (with a simple ID generation for example purposes)\n      const newTask = { ...task, id: Date.now() };\n      setTasks([...tasks, newTask]);\n    }\n    setShowDialog(false); // Close the dialog after saving\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      {/* Button to add a new task */}\n      <TaskTable tasks={tasks} onEdit={handleShowEditDialog} />\n      <TaskDialog\n        show={showDialog}\n        handleClose={handleCloseDialog}\n        handleSave={handleSaveTask}\n        taskData={currentTask}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AACrC,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAMa,mBAAmB,GAAGA,CAAA,KAAM;IAChCD,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACtBJ,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMM,oBAAoB,GAAIC,IAAI,IAAK;IACrCH,cAAc,CAACG,IAAI,CAAC,CAAC,CAAC;IACtBP,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC9BR,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,MAAMS,cAAc,GAAIF,IAAI,IAAK;IAC/B,IAAIJ,WAAW,EAAE;MACf;MACA,MAAMO,YAAY,GAAGT,KAAK,CAACU,GAAG,CAAEC,CAAC,IAC/BA,CAAC,CAACC,EAAE,KAAKV,WAAW,CAACU,EAAE,GAAG;QAAE,GAAGN,IAAI;QAAEM,EAAE,EAAEV,WAAW,CAACU;MAAG,CAAC,GAAGD,CAC9D,CAAC;MACDV,QAAQ,CAACQ,YAAY,CAAC;IACxB,CAAC,MAAM;MACL;MACA,MAAMI,OAAO,GAAG;QAAE,GAAGP,IAAI;QAAEM,EAAE,EAAEE,IAAI,CAACC,GAAG,CAAC;MAAE,CAAC;MAC3Cd,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEa,OAAO,CAAC,CAAC;IAC/B;IACAd,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEJ,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAE7BtB,OAAA,CAACH,SAAS;MAACQ,KAAK,EAAEA,KAAM;MAACkB,MAAM,EAAEb;IAAqB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzD3B,OAAA,CAACF,UAAU;MACT8B,IAAI,EAAEzB,UAAW;MACjB0B,WAAW,EAAEjB,iBAAkB;MAC/BkB,UAAU,EAAEjB,cAAe;MAC3BkB,QAAQ,EAAExB;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CAlDQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}